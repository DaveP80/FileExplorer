Index: src/main/java/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.List;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class App { //returns full file paths that contain a substring\r\n    public static void main(String[] args) throws IOException {\r\n\r\n        List<String> lines = Files.readAllLines(Paths.get(\"C:\\\\Users\\\\yourName\\\\desktop\\\\document.txt\")); //use path to your file\r\n        for (String line : lines) {\r\n            Pattern pattern = Pattern.compile(\"(.*)example(.*)\");\r\n            Matcher matcher = pattern.matcher(line);\r\n            while (matcher.find()) {\r\n\r\n                System.out.println(line);\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/App.java b/src/main/java/App.java
--- a/src/main/java/App.java	
+++ b/src/main/java/App.java	
@@ -1,3 +1,5 @@
+import java.io.BufferedReader;
+import java.io.FileReader;
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Paths;
@@ -7,15 +9,36 @@
 
 public class App { //returns full file paths that contain a substring
     public static void main(String[] args) throws IOException {
+        Pattern patt = Pattern.compile("(.*)king(.*)");
+        // A FileReader (see the I/O chapter)
+        BufferedReader r = new BufferedReader(new FileReader("C:\\Users\\david\\desktop\\warnpeace.txt"));
 
-        List<String> lines = Files.readAllLines(Paths.get("C:\\Users\\yourName\\desktop\\document.txt")); //use path to your file
-        for (String line : lines) {
-            Pattern pattern = Pattern.compile("(.*)example(.*)");
-            Matcher matcher = pattern.matcher(line);
-            while (matcher.find()) {
+        // For each line of input, try matching in it.
+        String line;
+        while ((line = r.readLine()) != null) {
+            // For each match in the line, extract and print it.
+            Matcher m = patt.matcher(line);
+            while (m.find()) {
+                // Simplest method:
+                 System.out.println(m.group(0));
 
-                System.out.println(line);
+                // Get the starting position of the text
+                int start = m.start(0);
+                // Get ending position
+                int end = m.end();
+                // Print whatever matched.
+                // Use CharacterIterator.substring(offset, end);
+//                System.out.println(line.substring(start, end));
             }
         }
     }
-}
\ No newline at end of file
+
+//        List<String> lines = Files.readAllLines(Paths.get("C:\\Users\\david\\desktop\\warnpeace.txt")); //use path to your file
+//        for (String line : lines) {
+//            Pattern pattern = Pattern.compile("(.*)king(.*)");
+//            Matcher matcher = pattern.matcher(line);
+//            while (matcher.find()) {
+//
+//                System.out.println(matcher.group(1));
+            }
+
